TODO:
1) Fare un wrapper durante la gestinoe del segnale, in modo che il bit della maschera venga settato a 0 solo alla fine
2) Fare un timer, che ogni TOT secondi fa sì che un processo invia un segnale
3) Implementare giusto 2 segnali (magari tipo la kill ed uno che gli notifica tipo "CIAO", non so)
4) Stack frame per la gestione dei segnali
5) Fare una handler con uno switch

Pratico:
1) Definire segnali
2) Modificare PCB
3) Creare gestore -> file syscall
4) Impostare timer
5) Decidere come definire la syscall internal_signals(int signal_number, int PID) , li manda il sistema
6) Scegliere a quale processo inviarlo 

L'invio dei segnali viene fatto sempre sul processo in coda alla ready_list, che viene spostato in testa così da eseguire
subito il segnale inviato 

Definizione dei segnali
->sigKill: uccide il processo in modo brutale e cattivo
->sigMoveHead: quando il processo esce dallo stato di Running, viene messo in testa alla ready_list anziché in coda